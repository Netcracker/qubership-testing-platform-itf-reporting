spring.main.allow-bean-definition-overriding=true
logging.level.org.springframework.boot.autoconfigure.logging=INFO
##==============================Undertow===============================
server.port=${HTTP_PORT:8080}
# Undertow session timeout (in minutes) before authorization is expired
server.servlet.session.timeout=${UNDERTOW_SESSION_TIMEOUT:58m}
server.forward-headers-strategy=NATIVE
server.compression.enabled=${UNDERTOW_COMPRESSION_ENABLED:false}
server.compression.mime-types=${UNDERTOW_COMPRESSION_MIMETYPE:text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml}
server.undertow.threads.io=${SERVER_UNDERTOW_IO_THREADS:4}
server.undertow.threads.worker=${SERVER_UNDERTOW_WORKER_THREADS:32}
server.undertow.options.server.enable-statistics=true
jboss.threads.eqe.statistics=${JBOSS_THREADS_EQE_STATISTICS:true}
##=============================DateBase Setting===============================
spring.datasource.url=${JDBC_URL:jdbc:postgresql://localhost:5432/reporting}
spring.datasource.username=${ITF_REPORTING_DB_USER:postgres}
spring.datasource.password=${ITF_REPORTING_DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.type=javax.sql.DataSource
spring.datasource.hikari.minimum-idle=${SPRING_DATASOURCE_MINIDLE:10}
spring.datasource.hikari.maximum-pool-size=${SPRING_DATASOURCE_MAXTOTAL:2000}
spring.datasource.hikari.idle-timeout=${SPRING_DATASOURCE_HIKARI_IDLE_TIMEOUT:55000}
spring.datasource.hikari.max-lifetime=${SPRING_DATASOURCE_HIKARI_MAX_LIFE_TIME:7200000}

org.hibernate=hibernate-java8
hibernate.hbm2ddl.auto=none
spring.jpa.hibernate.ddl-auto=none
hibernate.generate.statistics=true
hibernate.session.events.log=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
##===============================Logging===============================
logging.level.root=${LOG_LEVEL:INFO}
log.graylog.on=${GRAYLOG_ON:false}
log.graylog.host=${GRAYLOG_HOST:graylog-service-address}
log.graylog.port=${GRAYLOG_PORT:12201}
log.graylog.level=INFO
log.appender.date.format=dd.MM.yy HH:mm:ss
atp.logging.business.keys=projectId,executionRequestId,testRunId,callChainId,itfSessionId,itfContextId
##==================Integration with Spring Cloud======================
spring.application.name=${SERVICE_NAME:atp-itf-reporting}
eureka.client.enabled=${EUREKA_CLIENT_ENABLED:false}
eureka.instance.prefer-ip-address=true
eureka.serviceUrl.default=http://atp-registry-service-address/eureka
eureka.client.serviceUrl.defaultZone=${SERVICE_REGISTRY_URL:http://atp-registry-service:8761/eureka}
atp.service.public=${ATP_SERVICE_PUBLIC:true}
atp.service.path=${ATP_SERVICE_PATH:/api/atp-itf-reports/v1/**}
##==================atp-auth-spring-boot-starter=======================
spring.profiles.active=${SPRING_PROFILES:disable-security}
spring.cache.cache-names=projects
spring.cache.caffeine.spec=maximumSize=100, expireAfterAccess=120s, expireAfterWrite=120s
keycloak.enabled=${KEYCLOAK_ENABLED:false}
keycloak.resource=${KEYCLOAK_CLIENT_NAME:testRealm}
keycloak.credentials.secret=${KEYCLOAK_SECRET:f3e17149-94d0-47ed-a5b7-744c332fdf66}
keycloak.bearer-only=true
keycloak.realm=${KEYCLOAK_REALM:testRealm}
keycloak.auth-server-url=${KEYCLOAK_AUTH_URL:localhost}
atp-auth.project_info_endpoint=${PROJECT_INFO_ENDPOINT:/api/v1/users/projects}
atp-auth.enable-m2m=true
atp-auth.headers.content-security-policy=${CONTENT_SECURITY_POLICY:default-src 'self' 'unsafe-inline' *}
##=============================Feign===================================
atp.public.gateway.url=${ATP_PUBLIC_GATEWAY_URL:http://atp-public-gateway-service-address}
atp.internal.gateway.url=${ATP_INTERNAL_GATEWAY_URL:http://atp-internal-gateway:8080}
atp.internal.gateway.enabled=${ATP_INTERNAL_GATEWAY_ENABLED:false}
atp.internal.gateway.name=${ATP_INTERNAL_GATEWAY_NAME:atp-internal-gateway}
feign.httpclient.disableSslValidation=${FEIGN_HTTPCLIENT_DISABLE_SSL:true}
feign.httpclient.enabled=${FEIGN_HTTPCLIENT_ENABLED:true}
feign.okhttp.enabled=${FEIGN_OKHTTP_ENABLED:true}
atp.service.internal=${ATP_SERVICE_INTERNAL:false}
## datasets
feign.atp.datasets.name=${FEIGN_ATP_DATASETS_NAME:ATP-DATASETS}
feign.atp.datasets.url=${FEIGN_ATP_DATASETS_URL:}
feign.atp.datasets.route=${FEIGN_ATP_DATASETS_ROUTE:api/atp-datasets/v1}
## bulk validator
feign.atp.bv.name=${FEIGN_ATP_BV_NAME:ATP-BV}
feign.atp.bv.url=${FEIGN_ATP_BV_URL:}
feign.atp.bv.route=${FEIGN_ATP_BV_ROUTE:api/bvtool/v1}
## environments
feign.atp.environments.name=${FEIGN_ATP_ENVIRONMENTS_NAME:ATP-ENVIRONMENTS}
feign.atp.environments.url=${FEIGN_ATP_ENVIRONMENTS_URL:}
feign.atp.environments.route=${FEIGN_ATP_ENVIRONMENTS_ROUTE:api/atp-environments/v1}
## catalogue
feign.atp.catalogue.name=${FEIGN_ATP_CATALOGUE_NAME:ATP-CATALOGUE}
feign.atp.catalogue.route=${FEIGN_ATP_CATALOGUE_ROUTE:api/atp-catalogue/v1}
feign.atp.catalogue.url=${FEIGN_ATP_CATALOGUE_URL:}
## users
feign.atp.users.url=${FEIGN_ATP_USERS_URL:}
feign.atp.users.name=${FEIGN_ATP_USERS_NAME:ATP-USERS-BACKEND}
feign.atp.users.route=${FEIGN_ATP_USERS_ROUTE:api/atp-users-backend/v1}
## itf executor
feign.atp.executor.name=${FEIGN_ATP_ITF_EXECUTOR_NAME:ATP-ITF-EXECUTOR}
feign.atp.executor.url=${FEIGN_ATP_ITF_EXECUTOR_URL:}
feign.atp.executor.route=${FEIGN_ATP_ITF_EXECUTOR_ROUTE:api/atp-itf-executor/v1}
##=============================ActiveMQ================================
message-broker.url=${ATP_ITF_BROKER_URL_TCP:tcp://atp-activemq:61616?wireFormat.maxInactivityDuration=0&wireFormat.maxFrameSize=104857600&keepAlive=true}
message-broker.reports.queue=${REPORT_QUEUE:ReportExecution}
receiver.listenerContainerFactory.concurrency=${RECEIVER_CONCURRENCY:50-1200}
receiver.listenerContainerFactory.maxMessagesPerTask=${RECEIVER_MAX_MESSAGES_PER_TASK:-1}
receiver.prefetchPolicy.queue=1
receiver.prefetchPolicy.topic=1
receiver.redeliveryPolicy.maximumRedeliveries=-1
spring.sleuth.messaging.jms.enabled=false
##========================Spring Boot Actuator=========================
management.endpoint.env.enabled=true

report.execution.schema=public
#Monitoring page - column "client" properties
tc.context.client_address=
##=============Consul=========================
management.health.consul.enabled=${CONSUL_HEALTH_CHECK_ENABLED:false}
##=============JobRunner=========================
atp-reporting.cron.expression=${ATP_ITF_REPORTING_CRON_EXPRESSION:0 0/20 * * * ?}
atp-reporting.job.name=atp-itf-reporting-stop-context-job
##======================ATP Services integration=======================
atp.catalogue.url=${ATP_CATALOGUE_URL:http://atp-catalogue-service-address}
configurator.url=${ATP_ITF_CONFIGURATOR_URL:http://atp-itf-configurator-service-address}
##=================Monitoring==========================================
management.server.port=${MONITOR_PORT:8090}
management.endpoints.web.exposure.include=${MONITOR_WEB_EXPOSE:prometheus,health,info,env}
management.endpoints.web.base-path=${MONITOR_WEB_BASE:/}
management.endpoints.web.path-mapping.prometheus=${MONITOR_WEB_MAP_PROM:metrics}
management.metrics.tags.application=${spring.application.name}

##===============Hibernate-multi-tenancy configurations=================================
atp.multi-tenancy.enabled=${MULTI_TENANCY_HIBERNATE_ENABLED:false}
springdoc.api-docs.enabled=${SWAGGER_ENABLED:true}
spring.main.allow-circular-references=true

##=============Audit Logging=================
atp.audit.logging.enable=${AUDIT_LOGGING_ENABLE:false}
atp.audit.logging.topic.name=${AUDIT_LOGGING_TOPIC_NAME:audit_logging_topic}
atp.audit.logging.topic.partitions=${AUDIT_LOGGING_TOPIC_PARTITIONS:1}
atp.audit.logging.topic.replicas=${AUDIT_LOGGING_TOPIC_REPLICAS:3}
atp.reporting.kafka.producer.bootstrap-server=${KAFKA_REPORTING_SERVERS:kafka.reporting.svc:9092}
##=============Required for Kafka beans init===============
kafka.enable=${KAFKA_ENABLE:true}
spring.sleuth.enabled=false
spring.kafka.producer.bootstrap-servers=${KAFKA_SERVERS:kafka:9092}
